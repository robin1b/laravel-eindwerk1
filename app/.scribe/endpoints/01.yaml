name: Items
description: |-

  API endpoints for managing items.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/items
    metadata:
      groupName: Items
      groupDescription: |-

        API endpoints for managing items.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all items.'
      description: |-
        Retrieves a paginated list of items. Supports filtering by status, name,
        creation date and page size.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      status:
        name: status
        description: 'Filter by status. Allowed values: new, in_progress, done.'
        required: false
        example: new
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'Filter by partial name match.'
        required: false
        example: foo
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      created_after:
        name: created_after
        description: 'date Filter items created on or after this date (YYYY-MM-DD).'
        required: false
        example: '2025-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of items per page.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: new
      name: foo
      created_after: '2025-01-01'
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "current_page":1,
           "data":[
              {
                "id":1,
                "name":"Item 1",
                "description":"Voorbeeld item",
                "status":"new",
                "created_at":"2025-05-01T12:34:56Z",
                "updated_at":"2025-05-01T12:34:56Z"
              }
           ],
           "from":1,
           "last_page":1,
           "per_page":15,
           "to":1,
           "total":1
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/items
    metadata:
      groupName: Items
      groupDescription: |-

        API endpoints for managing items.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the item.'
        required: true
        example: 'New item'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the item.'
        required: false
        example: 'This is an item.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'Must be one of: new, in_progress, done.'
        required: false
        example: new
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'New item'
      description: 'This is an item.'
      status: new
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "id": 123,
           "name": "New item",
           "description": "This is an item.",
           "status": "new",
           "created_at":"2025-05-05T10:00:00Z",
           "updated_at":"2025-05-05T10:00:00Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "message":"The given data was invalid.",
           "errors":{
             "name":["The name field is required."]
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/items/{id}'
    metadata:
      groupName: Items
      groupDescription: |-

        API endpoints for managing items.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get item details.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the item.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "name": "Item 1",
           "description": "Item description.",
           "status": "done",
           "created_at": "2025-05-01T12:34:56Z",
           "updated_at": "2025-05-01T12:34:56Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message":"No query results for model [App\\Models\\Item] 999"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/items/{id}'
    metadata:
      groupName: Items
      groupDescription: |-

        API endpoints for managing items.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an item.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the item.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
